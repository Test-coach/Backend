version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: typing-master-app
    environment:
      NODE_ENV: development
      PORT: 3000
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: password
      POSTGRES_DB: myappdb
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379
      MONGO_URI: mongodb://root:mongopass@mongodb:27017
      MONGO_DB: typing_analytics
      JWT_SECRET: your-super-secret-key
      NODE_OPTIONS: --inspect=0.0.0.0:9229
    ports:
      - "3000:3000"
      - "9229:9229"  # Debug port
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run dev

  postgres:
    image: postgres:15
    container_name: typing-master-postgres
    environment:
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: password
      POSTGRES_DB: myappdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./create-table.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev -d myappdb"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2
    container_name: typing-master-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:6.0
    container_name: typing-master-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongopass
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
  mongodb_data: